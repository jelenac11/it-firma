#server.port = 8095
server.port=${PORT:8095}

spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.platform=postgres

spring.datasource.url=jdbc:postgresql://localhost:5432/PspDB

# promenite ovde na vasu lokalnu bazu
spring.datasource.username=postgres
spring.datasource.password=zovemsejelenajelena

#Umesto da sami pišemo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako želimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji će Spring Boot automatski pokrenuti pri pokretanju aplikacije
spring.jpa.hibernate.ddl-auto = create-drop

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = false

#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=false

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.username=mrsisa.tim9@gmail.com
spring.mail.password=t1m9_mrs_isa
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true